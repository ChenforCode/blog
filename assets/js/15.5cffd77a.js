(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{560:function(t,s,a){"use strict";a.r(s);var n=a(12),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("ul",[a("li",[a("p",[t._v("volatile是Java虚拟机提供的轻量级的同步机制")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("保证 可见性")]),t._v(" "),a("ul",[a("li",[t._v("可见性：一个线程修改自己的工作内存并写回给主内存后，要及时通知其他线程，即其他线程要马上知道。叫做可见性")])])]),t._v(" "),a("li",[a("p",[t._v("不保证原子性")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("原子性，不可分割，完整性。某个线程在完成某个业务的时候")])]),t._v(" "),a("li",[a("p",[t._v("这里有个例子，如多个线程竞争调用i++方法，这个时候即使i有volatile，也无法保证原子性，必须i使用atomicInteger才可以。")])]),t._v(" "),a("li",[a("p",[t._v("当有三个线程同时进行a++的操作，三个线程同时拿到初始值0，并完成加一操作，但是可能存在t0写回1，在还没来得及通知t1和t2的时候（或者说t1和t2被挂起，没有收到通知），后者也进行了写回1，这就导致了数据的丢失。。。这一点有点问题，如果保证一致性的话，在t0写回主存之后，t1和t2的原值应该被立即更新，即0被废弃，变成1，但是这个时候如果已经进行了累加操作呢，结果是0+1还是1+1呢？")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/Chenforcode/chen-imagebed/raw/master/img/20210308153027.png",alt:"image-20210308153027102"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/Chenforcode/chen-imagebed/raw/master/img/20210308153316.png",alt:"image-20210308153316284"}})])]),t._v(" "),a("li",[a("p",[t._v("如何保证原子性")]),t._v(" "),a("ul",[a("li",[t._v("加sychronized，保证这个函数某个时刻只能一个线程进入")]),t._v(" "),a("li",[t._v("使用atomic保证原子性，同时atomic也保证了可见性")])])])])]),t._v(" "),a("li",[a("p",[t._v("禁止指令重排，多线程环境中线程交替执行，由于编译器指令重排的存在，两个线程使用的变量能否保证一致性是无法确认的，结果无法预测。加上volatile代表禁止指令重排。这里需要注意，指令重排是在不影响最终结果的一种提高效率的方式，例如下方的两种，线程1和线程2单独运行结果都是不会变的，只有在1，2同时运行，即交替运行时才会影响结果。即指令重排不影响单线程，只影响多线程。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/Chenforcode/chen-imagebed/raw/master/img/20210308163347.png",alt:"image-20210308163347048"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("内存屏障，是一个CPU指令。如果一个变量加了volatile关键字，那么所有关于这个变量的读写操作前后都会加上内存屏障，禁止重排，必须等读写完毕之后才可以继续执行，or重排。他的作用有两个。")]),t._v(" "),a("ul",[a("li",[t._v("保证特定操作的执行顺序")]),t._v(" "),a("li",[t._v("保证某些变量的内存可见性（利用该特性实现voloatile的内存可见性）")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/Chenforcode/chen-imagebed/raw/master/img/20210308165032.png",alt:"image-20210308165032387"}})])]),t._v(" "),a("li",[a("p",[t._v("工作内存与主内存同步延迟现象导致的可见性问题，可以使用sychronized和volatile关键字解决，他们都可以使一个线程修改后的变量对其他线程立即可见。")])]),t._v(" "),a("li",[a("p",[t._v("对于指令重排导致的可见性和有序性问题，可以利用volatile关键字解决，vloatile的一个作用就是禁止指令重排。")])])])]),t._v(" "),a("li",[a("p",[t._v("在哪里使用volatile")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("单例模式")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingletonDemo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingletonDemo")]),t._v(" instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingletonDemo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingletonDemo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingletonDemo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"constructor"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingletonDemo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("在多线程的情况下会出现错误，即a线程进入，还没创建好instance，b线程进入，又创了一次demo，所以会重复的调用构造函数")])]),t._v(" "),a("li",[a("p",[t._v("可以加上sychronized来解决这个问题")])]),t._v(" "),a("li",[a("p",[t._v("DCL类型的单例模式")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/Chenforcode/chen-imagebed/raw/master/img/20210308210300.png",alt:"image-20210308210300120"}})])]),t._v(" "),a("li",[a("p",[t._v("DCL单例模式存在的问题。就是说创建instance的三个步骤会出现指令重排，先指向内存，然后初始化对象，就有可能一个线程访问到instance不为null的时候，instance的实例还未完成初始化，所以这个情况出现必须有两个线程才可以额，即第一个线程进入，进行ins初始化（顺序错误，指向内存，但还没初始化），第二个线程进入，发现不为null，然后取出ins，此时初始化未完成，出现错误。而单线程在这里是不会出现问题的，因为不存在未初始化完成的时候就有第二个来取。必须是一次代码执行完了（既然代码已经执行完了，那么初始化也一定完成了），才会有第二次取进来")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/Chenforcode/chen-imagebed/raw/master/img/20210308211852.png",alt:"image-20210308211852760"}})]),t._v(" "),a("p",[t._v("解决方案就是在instance前边加上volatile，代表在instance读写前后加上了内存屏障，禁止指令重排")])])])])])]),t._v(" "),a("li",[a("p",[t._v("JVM（java虚拟机）")])]),t._v(" "),a("li",[a("p",[t._v("JMM（Java内存模型）")]),t._v(" "),a("ul",[a("li",[t._v("可见性")]),t._v(" "),a("li",[t._v("原子性")]),t._v(" "),a("li",[t._v("有序性")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/Chenforcode/chen-imagebed/raw/master/img/20210308142713.png",alt:"image-20210308142713149"}})])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/Chenforcode/chen-imagebed/raw/master/img/20210308142806.png",alt:"image-20210308142806247"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("阻塞当前main线程的方法：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("activeCount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("20个线程同时操纵一个数据的自增操作，如何保证原子性，在操作之前加上sychronized")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);