(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{422:function(t,n,e){"use strict";e.r(n);var a=e(2),c=Object(a.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h4",{attrs:{id:"countdownlatch"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#countdownlatch"}},[t._v("#")]),t._v(" CountDownLatch")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://raw.githubusercontent.com/ChenforCode/chen-imagebed/master/img/20210410153704.png",alt:"image-20210410153704387"}})]),t._v(" "),n("ul",[n("li",[t._v("上述是一个样例，构造一个countdownlatch，初始值为6，其他线程会对6做减法，主线程阻塞，直到countdownlatch为0，主线程才能继续运行。countdownlatch可以认为是一个倒计时的作用")]),t._v(" "),n("li",[t._v("countdownlatch，让一些线程阻塞，直到另一些线程完成一系列操作后才被唤醒。")]),t._v(" "),n("li",[t._v("cyclicBarrier，指n个线程会有n个屏障，线程完成某些操作之后会遇到屏障阻塞，直到n个屏障都到达了，主线程完成某些操作，和countdownlatch是一个相反的操作")])]),t._v(" "),n("p",[n("img",{attrs:{src:"https://raw.githubusercontent.com/ChenforCode/chen-imagebed/master/img/20210412234348.png",alt:"image-20210412234348504"}})]),t._v(" "),n("ul",[n("li",[t._v("countdownlatch是n个线程完成n件事情，然后主线程才能继续走。类似于倒计时到了，主线程才能继续。做减法")]),t._v(" "),n("li",[t._v("cyclicBarrier是每个线程到达终点后都会等待，知道n个线程都到了，才能执行某个操作。即各个线程互相等待，全都到了执行某个操作。做加法")]),t._v(" "),n("li",[t._v("Semaphore，和操作系统中的信号量是一个东西，用来控制多个共享资源的互斥使用，或者用于并发线程数的控制")]),t._v(" "),n("li",[n("img",{attrs:{src:"https://raw.githubusercontent.com/ChenforCode/chen-imagebed/master/img/20210413000928.png",alt:"image-20210413000928633"}})])])])}),[],!1,null,null,null);n.default=c.exports}}]);