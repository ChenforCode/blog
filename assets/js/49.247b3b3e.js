(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{593:function(s,e,a){"use strict";a.r(e);var t=a(12),n=Object(t.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("1.将mock文件夹放入public文件夹，模仿后台，这个时候可以通过/mock/cart.json的方式访问到相应的json文件，但是要注意把浏览器地址栏的#删掉，要不然是访问不到的。\n2.用axios访问后台拿数据，因为现在没有后台，就用mock来模拟一个。这里为什么安装vue-axios这个插件呢。首先如果不用这个插件，那么就需要在使用axios的时候提前导入，例如")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import axios from "axios"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("然后通过，axios.get()，里边里边的参数为访问地址，例如https://api/v1/getlist\n但是如果采用了vue-axios这个组件，那么vue会把axios封装成为一个vue对象，那么通过this就可以直接访问的到，不需要再引入axios这个组件了。如下方式")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("this.axios.get();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("3.如何获取axios返回的数据，如：\n这里是第一种方式，这样的嵌套函数是没有作用域的，所以在函数内部也可以使用this，如果没有这个，而采取的第二种方式")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('this.axios.get("/mock/cart.json").then((response) => {\n                    window.console.log(response);\n                });\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("这种方式会有作用域的概念，即在函数中就不能使用this了，这个地方可以类比与微信小程序中，必须在外部将this指针保存成一个that才能在内部使用。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('this.axios.get("/mock/cart.json").then(function(response){\n                    window.console.log(response);\n                });\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("取出里边的数据基本上是和小程序一致的，")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('this.axios.get("/mock/cart.json").then((response) => {\n                    window.console.log(response);\n                    let res = response.data;\n                    this.cartList = res.data;\n                });\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("4.列表渲染\nv-for指令，写到要循环渲染的那个标签上，item in cartList，那么item就是那个数组里的一个元素\n绑定src属性：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<img v-bind:src=\"'/imgs/' + item.productImage\">\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("绑定文字：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<div class="item-name">{{item.productName}}</div>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("内部赋值计算")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<div class="item-price-total">￥{{item.productNum*item.productPrice}}元</div>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("绑定class")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<a href="javascipt:;" class="checkbox-btn item-check-btn" v-bind:class="{\'checked\':item.checked}">\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("v-for指令后加上id，提高渲染效率")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<li v-for="item in cartList" v-bind:key="item.productId">\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])}),[],!1,null,null,null);e.default=n.exports}}]);