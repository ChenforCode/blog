(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{603:function(t,a,s){"use strict";s.r(a);var r=s(12),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h4",{attrs:{id:"写在开头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#写在开头"}},[t._v("#")]),t._v(" 写在开头")]),t._v(" "),s("p",[t._v("今天是2021年10月30日，在十月份的末尾，自己终于从软微搬家到了本部这边，最近是习惯了在本部吃饭，在本部，在实验室里自习的感觉。我是一个很怀旧的人，或者说是一个比较安于现状的人，自己在软微研发楼呆习惯了之后，真的是很抗拒来这边的。但是无奈，人总要迈出这一步的，我还是来了。")]),t._v(" "),s("h4",{attrs:{id:"最近现状"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最近现状"}},[t._v("#")]),t._v(" 最近现状")]),t._v(" "),s("p",[t._v("最近的状态并不是很好，由于选的方向和自己的预期相差太大，并且对于自己来说实现难度有些过高，导致项目一直是一个demo的状态，如果继续这样下去或许也只是一个完成指标的结果。对于老师和自己期望的出一篇论文来说还相差甚远。因此在昨天完成了上一阶段的交付之后，自己也想了很多，应该要明确一下自己的目标，然后按照目标的方向去努力了。")]),t._v(" "),s("h4",{attrs:{id:"要干点什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#要干点什么"}},[t._v("#")]),t._v(" 要干点什么")]),t._v(" "),s("ul",[s("li",[t._v("项目交付，不出意外的话，自己的工作会围绕这反序列化漏洞这一块继续展开，目前遇到的问题以及可以改进的点是：1、GadgetInspector这个项目他的底层实现采用ASM框架，是直接基于字节码分析的，在污点分析部分对堆栈结构的字节码分析，晦涩难懂。自己目前已经实现了一个基于soot的简单的污点分析，需要尝试将该部分与inspector尝试结合一下。2、自己偶然间发现的一个叫做tabby的工具，能够对Java程序生成一个代码属性图，看起来像是一个很完善的Callgraph之类的东西，然后利用Neo4j这个数据库进行辅助的图搜索，从使用者的反馈来看，效果还不错，还成功挖出了几个CVE，这个东西可以尝试当做本项目的一个亮点。3、在图搜索，污点分析两个最重要的部分还存在着很大的优化地方，因为目前的搜索已经丢了很多东西了，但速度还是很慢。")]),t._v(" "),s("li",[t._v("剩余漏洞的工作，根据反序列化的展开，自己目前是认为剩余的漏洞触发方式与反序列化有些许的差异。如果只将代码的搜索工作放在一个应用中，是否难度会有所降低呢？")]),t._v(" "),s("li",[t._v("成果：目标是挖出一个洞（菜鸡只要求一个，不过分吧）。然后对于这个工具发一篇C类的论文。")]),t._v(" "),s("li",[t._v("专利")]),t._v(" "),s("li",[t._v("继续刷题")])]),t._v(" "),s("h4",{attrs:{id:"最后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[t._v("#")]),t._v(" 最后")]),t._v(" "),s("ul",[s("li",[t._v("要加油鸭！不要划水啦！")])])])}),[],!1,null,null,null);a.default=e.exports}}]);